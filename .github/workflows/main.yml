name: CI

on:
  pull_request:
    branches-ignore: [ main ]

jobs:
  linters:
    name: Linters
    runs-on: ubuntu-20.04
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v2

      - name: Set up Ruby 3.0.2
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
          ruby-version: 3.0.2

      - name: Run linters
        run: |
          bundle exec rubocop

  ruby-lint:
    if: ${{ always() }}
    name: Ruby lint
    runs-on: ubuntu-20.04
    needs: linters

    steps:
      - name: Check linters job status
        if: ${{ needs.linters.result != 'success' }}
        run: exit 1

  ruby-specs-job:
    name: Ruby specs
    runs-on: ubuntu-20.04
    timeout-minutes: 40

    services:
      postgres:
        image: postgres:11.10
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432/tcp
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v2

      - name: Set up Ruby 3.0.2
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
          ruby-version: 3.0.2

      - name: Initialize database
        env:
          PGHOST: localhost
          PGUSER: postgres
          PGPASSWORD: postgres
          PGPORT: ${{ job.services.postgres.ports[5432] }}
        run: |
          bundle exec rails db:create

      - name: Run tests
        id: rspec-test
        env:
          PGHOST: localhost
          PGUSER: postgres
          PGPASSWORD: postgres
          PGPORT: ${{ job.services.postgres.ports[5432] }}
          RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
          RAILS_ENV: test
        continue-on-error: true
        run: |
          bundle exec rspec

      - name: Notify failure if rspec test fail
        if: steps.rspec-test.outcome != 'success'
        run: exit 1
